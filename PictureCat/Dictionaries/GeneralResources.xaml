<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF617088" Offset="1"/>
                <GradientStop Color="#FFC1C5CD" Offset="0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</sys:Double>
    <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">10</sys:Double>

    <Style TargetType="Button" x:Key="ButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="SearchButtonStyleFirst" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="0, 7, 7, 0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="LikeButtonStyleFirst" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="15" />
        <Setter Property="Width" Value="100"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="ConfirmButtonStyleFirst" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="15" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBox" x:Key="SearchTextBoxStyle">
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        CornerRadius="7, 0, 0, 7"
                        Background="#fff">
                        <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Image" x:Key="ImageStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MyStyle" TargetType="{x:Type UserControl}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Border.CornerRadius" Value="5"/>
                <Setter Property="Border.Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="1"  Direction="-75"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyCategoryCardBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Bisque"/>
        <Setter Property="BorderBrush" Value="#FFF5C067"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="FontStyle" Value="Italic"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Border}}" Value="True">
                        <Setter Property="TextDecorations" Value="Underline" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="LightSteelBlue"/>
                <Setter Property="BorderBrush" Value="CadetBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyAdditionalCardsBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Bisque"/>
        <Setter Property="BorderBrush" Value="#FFF5C067"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="LightSteelBlue"/>
                <Setter Property="BorderBrush" Value="CadetBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="AcceptButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="LightSeaGreen"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightSlateGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="DleteButtonStyle" BasedOn="{StaticResource AcceptButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="LightSalmon"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="UploadButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightSlateGray"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="LightCoral"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="AddDeleteTagCategoryButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="35"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="57"/>
        <Setter Property="Height" Value="57"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="LightCoral"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="TitleTextBoxStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxHeight" Value="50"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        CornerRadius="0, 0, 7, 7" >
                        <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="false"/>
                        <Border.Style>
                            <Style x:Name="borderStyle">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="{x:Null}">
                                        <Setter Property="Border.Background" Value="AntiqueWhite" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="">
                                        <Setter Property="Border.Background" Value="AntiqueWhite" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

     <Style TargetType="TextBox" x:Key="AdditionalInformationTextboxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        CornerRadius="10, 10, 10, 10"
                        Background="#fff">
                        <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="true"
                        VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DatePickerTextBox" x:Key="DatePickerTextBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unwatermarked"/>
                                <VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                            <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1"/>
                                <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="1">
                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="CheckBoxBorderStyle">
        <Setter Property="CornerRadius" Value="8"/>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListCheckBoxItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="BaseMainMenuButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Background" Value="CadetBlue"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="100"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="LightSteelBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="MainMenuButtonHeadStyle" BasedOn="{StaticResource BaseMainMenuButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="15, 0, 0, 15"/>
    </Style>
    
    <Style TargetType="Button" x:Key="MainMenuButtonTailStyle" BasedOn="{StaticResource BaseMainMenuButtonStyle}">
        <Setter Property="Border.CornerRadius" Value="0, 15, 15, 0"/>
    </Style>
    
</ResourceDictionary>